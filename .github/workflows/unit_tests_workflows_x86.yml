name: UNIT TESTS - workflows

on:
  pull_request:
    paths-ignore:
      - "**/*.md"
      - "inference_sdk/**"
      - "inference_cli/**"
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  is_mergeable:
    outputs:
      mergeable_state: ${{ steps.mergeable_check.outputs.mergeable_state }}
    runs-on:
      labels: depot-ubuntu-22.04-8
      group: public-depot
    timeout-minutes: 15
    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v4
      - name: Wait for mergeable state
        id: mergeable_check
        run: |
          if $(git merge-base --is-ancestor ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }}); then
            echo "mergeable_state=clean" >> "$GITHUB_OUTPUT"
          fi
  build-dev-test:
    needs: is_mergeable
    if: ${{ github.event_name != 'pull_request' || needs.is_mergeable.outputs.mergeable_state == 'clean' }}
    runs-on:
      labels: depot-ubuntu-22.04-4
      group: public-depot
    timeout-minutes: 10
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      - name: 📦 Cache Python packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('requirements/**') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-
      - name: 🐍 Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          check-latest: true
      - name: 📦 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade setuptools
          pip install -r requirements/_requirements.txt -r requirements/requirements.cpu.txt -r requirements/requirements.sdk.http.txt -r requirements/requirements.test.unit.txt -r requirements/requirements.http.txt
      - name: 🧪 Unit Tests of Workflows
        timeout-minutes: 30
        run: python -m pytest tests/workflows/unit_tests
