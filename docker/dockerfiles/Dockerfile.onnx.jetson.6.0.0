FROM dustynv/l4t-ml:r36.2.0

ARG DEBIAN_FRONTEND=noninteractive
ENV LANG=en_US.UTF-8 

RUN ln -s /usr/bin/python3 /usr/bin/python && \
    apt-get update -y && apt-get install -y \
    lshw \
    git \
    gfortran \
    build-essential \
    libatlas-base-dev \
    libsm6 \
    libxext6 \
    wget \
    python3-shapely \
    gdal-bin \
    libgdal-dev \
    && rm -rf /var/lib/apt/lists/*

COPY requirements/requirements.clip.txt \
    requirements/requirements.http.txt \
    requirements/requirements.doctr.txt \
    requirements/requirements.groundingdino.txt \
    requirements/requirements.sdk.http.txt \
    requirements/requirements.yolo_world.txt \
    requirements/_requirements.txt \
    ./

RUN find . -type f -name "*requirements*.txt" -exec sed -i '/^opencv-python/d' {} \; && \
    find . -type f -name "*requirements*.txt" -exec sed -i '/^onnxruntime/d' {} \;

RUN python3 -m pip install --ignore-installed PyYAML && rm -rf ~/.cache/pip

RUN python3 -m pip install --upgrade pip  && python3 -m pip install \
    git+https://github.com/pypdfium2-team/pypdfium2 \
    -r _requirements.txt \
    -r requirements.clip.txt \
    -r requirements.http.txt \
    -r requirements.doctr.txt \
    -r requirements.groundingdino.txt \
    -r requirements.sdk.http.txt \
    -r requirements.yolo_world.txt \
    jupyterlab \
    --upgrade \
    && rm -rf ~/.cache/pip

WORKDIR /build
COPY . .
RUN /bin/make create_wheels_for_gpu_notebook
RUN pip3 install dist/inference_cli*.whl dist/inference_core*.whl dist/inference_gpu*.whl dist/inference_sdk*.whl

RUN /bin/make create_wheels_for_gpu_notebook
RUN pip3 install dist/inference_cli*.whl dist/inference_core*.whl dist/inference_gpu*.whl dist/inference_sdk*.whl

WORKDIR /app/
COPY inference inference
COPY inference_sdk inference_sdk
COPY docker/config/gpu_http.py gpu_http.py

ENV VERSION_CHECK_MODE=continuous
ENV PROJECT=roboflow-platform
ENV ORT_TENSORRT_FP16_ENABLE=1
ENV ORT_TENSORRT_ENGINE_CACHE_ENABLE=1
ENV CORE_MODEL_SAM_ENABLED=False
ENV PROJECT=roboflow-platform
ENV NUM_WORKERS=1
ENV HOST=0.0.0.0
ENV PORT=9001
ENV OPENBLAS_CORETYPE=ARMV8 
ENV LD_PRELOAD=/usr/lib/aarch64-linux-gnu/libgomp.so.1
ENV WORKFLOWS_STEP_EXECUTION_MODE=local
ENV WORKFLOWS_MAX_CONCURRENT_STEPS=2
ENV API_LOGGING_ENABLED=True
ENV CORE_MODEL_TROCR_ENABLED=false
ENV RUNS_ON_JETSON=True
ENV ENABLE_STREAM_API=True
ENV ENABLE_WORKFLOWS_PROFILING=True
ENV ENABLE_PROMETHEUS=True

ENTRYPOINT uvicorn gpu_http:app --workers $NUM_WORKERS --host $HOST --port $PORT