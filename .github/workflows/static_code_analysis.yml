name: Static code analysis

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  is_mergeable:
    outputs:
      mergeable_state: ${{ steps.mergeable_check.outputs.mergeable_state }}
    runs-on:
      labels: depot-ubuntu-22.04-8
      group: public-depot
    timeout-minutes: 15
    steps:
      - name: Calculate depth
        run: echo "FETCH_DEPTH=$(( ${{ github.event.pull_request.commits }} + 1 ))" >> "${GITHUB_ENV}"
      - name: 🛎️ Checkout branch with all history
        uses: actions/checkout@v4
        with:
          fetch-depth: ${{ env.FETCH_DEPTH }}
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Check and store mergable state
        id: mergeable_check
        run: |
          echo "Check if main is ancestor of ${{ github.event.pull_request.head.sha }} (branch HEAD)";
          if $(git merge-base --is-ancestor main ${{ github.event.pull_request.head.sha }}); then
            echo "Branch is mergeable";
            echo "mergeable_state=clean" >> "$GITHUB_OUTPUT";
          else
            echo "Branch needs to be updated";
            echo "mergeable_state=not_clean" >> "$GITHUB_OUTPUT";
          fi
  build-dev-test:
    needs: is_mergeable
    if: ${{ github.event_name != 'pull_request' || needs.is_mergeable.outputs.mergeable_state == 'clean' }}
    runs-on:
      labels: depot-ubuntu-22.04-small
      group: public-depot
    timeout-minutes: 5
    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      - name: Install code analysis dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements/requirements.code_analysis.txt
      - name: Check code quality
        run: |
          make check_code_quality
